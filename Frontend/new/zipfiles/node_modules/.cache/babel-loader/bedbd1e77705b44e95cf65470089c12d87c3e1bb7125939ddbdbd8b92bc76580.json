{"ast":null,"code":"// // App.js\n// import React, { useState, useEffect } from 'react';\n// import SplashScreen from './SplashScreen';\n// import './styles.css'; // Your existing CSS for the upload/results UI\n\n// function App() {\n//   // State for showing/hiding splash screen\n//   const [showSplash, setShowSplash] = useState(true);\n//   // State for adding fade-out class\n//   const [fadeClass, setFadeClass] = useState('');\n\n//   // State for switching between upload and results pages (after splash)\n//   const [page, setPage] = useState('upload');\n\n//   useEffect(() => {\n//     // Let the splash screen show for 3 seconds\n//     const timer = setTimeout(() => {\n//       // Add fade-out animation\n//       setFadeClass('fade-out');\n//       // Remove splash screen after fade-out completes (1s)\n//       setTimeout(() => {\n//         setShowSplash(false);\n//       }, 1000);\n//     }, 3000);\n\n//     return () => clearTimeout(timer);\n//   }, []);\n\n//   const handleUpload = () => {\n//     setPage('results');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {showSplash ? (\n//         <div className={fadeClass}>\n//           <SplashScreen />\n//         </div>\n//       ) : (\n//         <div className=\"container\">\n//           {page === 'upload' ? (\n//             <>\n//               <h1>GeneSight Upload Page</h1>\n//               <p>Click the button below to upload your files for analysis.</p>\n//               <input type=\"file\" className=\"file-input\" />\n//               <button className=\"upload-button\" onClick={handleUpload}>\n//                 Upload Files Here Now\n//               </button>\n//             </>\n//           ) : (\n//             <>\n//               <h1>Here's What We Found:</h1>\n//               <p>Your results will be displayed here!</p>\n//             </>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/muhammadrashid/Desktop/Mammu/Mammu/GeneSight/GeneSight/Frontend/new/zipfiles/src/App.js"],"sourcesContent":["// // App.js\n// import React, { useState, useEffect } from 'react';\n// import SplashScreen from './SplashScreen';\n// import './styles.css'; // Your existing CSS for the upload/results UI\n\n// function App() {\n//   // State for showing/hiding splash screen\n//   const [showSplash, setShowSplash] = useState(true);\n//   // State for adding fade-out class\n//   const [fadeClass, setFadeClass] = useState('');\n\n//   // State for switching between upload and results pages (after splash)\n//   const [page, setPage] = useState('upload');\n\n//   useEffect(() => {\n//     // Let the splash screen show for 3 seconds\n//     const timer = setTimeout(() => {\n//       // Add fade-out animation\n//       setFadeClass('fade-out');\n//       // Remove splash screen after fade-out completes (1s)\n//       setTimeout(() => {\n//         setShowSplash(false);\n//       }, 1000);\n//     }, 3000);\n\n//     return () => clearTimeout(timer);\n//   }, []);\n\n//   const handleUpload = () => {\n//     setPage('results');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {showSplash ? (\n//         <div className={fadeClass}>\n//           <SplashScreen />\n//         </div>\n//       ) : (\n//         <div className=\"container\">\n//           {page === 'upload' ? (\n//             <>\n//               <h1>GeneSight Upload Page</h1>\n//               <p>Click the button below to upload your files for analysis.</p>\n//               <input type=\"file\" className=\"file-input\" />\n//               <button className=\"upload-button\" onClick={handleUpload}>\n//                 Upload Files Here Now\n//               </button>\n//             </>\n//           ) : (\n//             <>\n//               <h1>Here's What We Found:</h1>\n//               <p>Your results will be displayed here!</p>\n//             </>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}