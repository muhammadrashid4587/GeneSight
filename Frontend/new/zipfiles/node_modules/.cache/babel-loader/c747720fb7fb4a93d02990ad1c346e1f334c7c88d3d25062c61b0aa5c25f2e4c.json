{"ast":null,"code":"// // // App.js\n// // import React, { useState, useEffect } from 'react';\n// // import SplashScreen from './SplashScreen';\n// // import './styles.css';\n\n// // // Import your video from the assets folder\n// // import dnaVideo from './assets/dnaHologram.mp4';\n\n// // function App() {\n// //   // 1) Splash screen states\n// //   const [showSplash, setShowSplash] = useState(true);\n// //   const [fadeClass, setFadeClass] = useState('');\n\n// //   // 2) Page state (upload or results)\n// //   const [page, setPage] = useState('upload');\n\n// //   // Splash screen fade-out effect\n// //   useEffect(() => {\n// //     const timer = setTimeout(() => {\n// //       setFadeClass('fade-out');\n// //       setTimeout(() => {\n// //         setShowSplash(false);\n// //       }, 1000);\n// //     }, 3000);\n\n// //     return () => clearTimeout(timer);\n// //   }, []);\n\n// //   // Switch to 'results' page after file upload\n// //   const handleUpload = () => {\n// //     setPage('results');\n// //   };\n\n// //   return (\n// //     <div className=\"App\">\n// //       {/* SPLASH SCREEN */}\n// //       {showSplash ? (\n// //         <div className={`splash-wrapper ${fadeClass}`}>\n// //           <SplashScreen />\n// //         </div>\n// //       ) : (\n// //         /* MAIN MENU PAGE */\n// //         <div className=\"main-menu\">\n// //           <h1 className=\"main-title\">GENESIGHT</h1>\n// //           <h2 className=\"subtitle\">Upload Your Gene Expression Data</h2>\n// //           <p className=\"description\">\n// //             Get a quick and explainable risk assessment for disease prediction.\n// //           </p>\n\n// //           {/* HOLOGRAM SECTION */}\n// //           <div className=\"hologram-container\">\n// //             <video\n// //               autoPlay\n// //               loop\n// //               muted\n// //               playsInline\n// //               className=\"hologram-video\"\n// //             >\n// //               <source src={dnaVideo} type=\"video/mp4\" />\n// //               {/* Fallback text if video can't be played */}\n// //               Your browser does not support the video tag.\n// //             </video>\n// //           </div>\n\n// //           {/* CONTENT: either upload form or results */}\n// //           {page === 'upload' ? (\n// //             <div className=\"upload-section\">\n// //               {/* \"Select File\" label as a clickable area for input */}\n// //               <label htmlFor=\"file-upload\" className=\"file-label\">\n// //                 Select File\n// //               </label>\n// //               <input\n// //                 id=\"file-upload\"\n// //                 className=\"file-input\"\n// //                 type=\"file\"\n// //                 onChange={(e) =>\n// //                   console.log('File selected:', e.target.files[0])\n// //                 }\n// //               />\n// //               <button className=\"upload-button\" onClick={handleUpload}>\n// //                 Upload Files Now\n// //               </button>\n// //             </div>\n// //           ) : (\n// //             <div className=\"results-section\">\n// //               <h2>Analysis Results</h2>\n// //               <p>Your model predictions or data visualizations go here!</p>\n// //             </div>\n// //           )}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n// import React, { useState, useEffect } from 'react';\n// import SplashScreen from './SplashScreen';\n// import './styles.css';\n// import dnaVideo from './assets/dnaHologram.mp4';\n\n// function App() {\n//   // Splash screen and page states\n//   const [showSplash, setShowSplash] = useState(true);\n//   const [fadeClass, setFadeClass] = useState('');\n//   const [page, setPage] = useState('upload');\n\n//   // State to store the file selected by the user\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   // State to store prediction results\n//   const [result, setResult] = useState(null);\n\n//   useEffect(() => {\n//     const timer = setTimeout(() => {\n//       setFadeClass('fade-out');\n//       setTimeout(() => {\n//         setShowSplash(false);\n//       }, 1000);\n//     }, 3000);\n//     return () => clearTimeout(timer);\n//   }, []);\n\n//   const handleFileChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setSelectedFile(e.target.files[0]);\n//     }\n//   };\n\n//   const handleUpload = async () => {\n//     if (!selectedFile) {\n//       alert(\"Please select a file first.\");\n//       return;\n//     }\n//     // Create a FormData object and append the file\n//     const formData = new FormData();\n//     formData.append(\"file\", selectedFile);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:8000/predict\", {\n//         method: \"POST\",\n//         body: formData\n//       });\n//       const data = await response.json();\n//       console.log(\"Prediction result:\", data);\n//       setResult(data);\n//       setPage(\"results\");\n//     } catch (error) {\n//       console.error(\"Error uploading file:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {showSplash ? (\n//         <div className={`splash-wrapper ${fadeClass}`}>\n//           <SplashScreen />\n//         </div>\n//       ) : (\n//         <div className=\"main-menu\">\n//           <h1 className=\"main-title\">GENESIGHT</h1>\n//           <h2 className=\"subtitle\">Upload Your Gene Expression Data</h2>\n//           <p className=\"description\">\n//             Get a quick and explainable risk assessment for disease prediction.\n//           </p>\n\n//           {/* Hologram Section */}\n//           <div className=\"hologram-container\">\n//             <video autoPlay loop muted playsInline className=\"hologram-video\">\n//               <source src={dnaVideo} type=\"video/mp4\" />\n//               Your browser does not support the video tag.\n//             </video>\n//           </div>\n\n//           {page === 'upload' ? (\n//             <div className=\"upload-section\">\n//               <label htmlFor=\"file-upload\" className=\"file-label\">\n//                 Select File\n//               </label>\n//               <input\n//                 id=\"file-upload\"\n//                 className=\"file-input\"\n//                 type=\"file\"\n//                 onChange={handleFileChange}\n//               />\n//               <button className=\"upload-button\" onClick={handleUpload}>\n//                 Upload Files Now\n//               </button>\n//             </div>\n//           ) : (\n//             <div className=\"results-section\">\n//               <h2>Analysis Results</h2>\n//               {result ? (\n//                 <>\n//                   <p>Risk Score: {result.riskScore}</p>\n//                   <ul>\n//                     {result.topFeatures.map((feat, idx) => (\n//                       <li key={idx}>\n//                         {feat.gene}: {feat.importance.toFixed(2)}\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </>\n//               ) : (\n//                 <p>No results available.</p>\n//               )}\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/muhammadrashid/Desktop/Mammu/Mammu/GeneSight/GeneSight/Frontend/new/zipfiles/src/App.js"],"sourcesContent":["// // // App.js\n// // import React, { useState, useEffect } from 'react';\n// // import SplashScreen from './SplashScreen';\n// // import './styles.css';\n\n// // // Import your video from the assets folder\n// // import dnaVideo from './assets/dnaHologram.mp4';\n\n// // function App() {\n// //   // 1) Splash screen states\n// //   const [showSplash, setShowSplash] = useState(true);\n// //   const [fadeClass, setFadeClass] = useState('');\n\n// //   // 2) Page state (upload or results)\n// //   const [page, setPage] = useState('upload');\n\n// //   // Splash screen fade-out effect\n// //   useEffect(() => {\n// //     const timer = setTimeout(() => {\n// //       setFadeClass('fade-out');\n// //       setTimeout(() => {\n// //         setShowSplash(false);\n// //       }, 1000);\n// //     }, 3000);\n\n// //     return () => clearTimeout(timer);\n// //   }, []);\n\n// //   // Switch to 'results' page after file upload\n// //   const handleUpload = () => {\n// //     setPage('results');\n// //   };\n\n// //   return (\n// //     <div className=\"App\">\n// //       {/* SPLASH SCREEN */}\n// //       {showSplash ? (\n// //         <div className={`splash-wrapper ${fadeClass}`}>\n// //           <SplashScreen />\n// //         </div>\n// //       ) : (\n// //         /* MAIN MENU PAGE */\n// //         <div className=\"main-menu\">\n// //           <h1 className=\"main-title\">GENESIGHT</h1>\n// //           <h2 className=\"subtitle\">Upload Your Gene Expression Data</h2>\n// //           <p className=\"description\">\n// //             Get a quick and explainable risk assessment for disease prediction.\n// //           </p>\n\n// //           {/* HOLOGRAM SECTION */}\n// //           <div className=\"hologram-container\">\n// //             <video\n// //               autoPlay\n// //               loop\n// //               muted\n// //               playsInline\n// //               className=\"hologram-video\"\n// //             >\n// //               <source src={dnaVideo} type=\"video/mp4\" />\n// //               {/* Fallback text if video can't be played */}\n// //               Your browser does not support the video tag.\n// //             </video>\n// //           </div>\n\n// //           {/* CONTENT: either upload form or results */}\n// //           {page === 'upload' ? (\n// //             <div className=\"upload-section\">\n// //               {/* \"Select File\" label as a clickable area for input */}\n// //               <label htmlFor=\"file-upload\" className=\"file-label\">\n// //                 Select File\n// //               </label>\n// //               <input\n// //                 id=\"file-upload\"\n// //                 className=\"file-input\"\n// //                 type=\"file\"\n// //                 onChange={(e) =>\n// //                   console.log('File selected:', e.target.files[0])\n// //                 }\n// //               />\n// //               <button className=\"upload-button\" onClick={handleUpload}>\n// //                 Upload Files Now\n// //               </button>\n// //             </div>\n// //           ) : (\n// //             <div className=\"results-section\">\n// //               <h2>Analysis Results</h2>\n// //               <p>Your model predictions or data visualizations go here!</p>\n// //             </div>\n// //           )}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n\n\n// import React, { useState, useEffect } from 'react';\n// import SplashScreen from './SplashScreen';\n// import './styles.css';\n// import dnaVideo from './assets/dnaHologram.mp4';\n\n// function App() {\n//   // Splash screen and page states\n//   const [showSplash, setShowSplash] = useState(true);\n//   const [fadeClass, setFadeClass] = useState('');\n//   const [page, setPage] = useState('upload');\n\n//   // State to store the file selected by the user\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   // State to store prediction results\n//   const [result, setResult] = useState(null);\n\n//   useEffect(() => {\n//     const timer = setTimeout(() => {\n//       setFadeClass('fade-out');\n//       setTimeout(() => {\n//         setShowSplash(false);\n//       }, 1000);\n//     }, 3000);\n//     return () => clearTimeout(timer);\n//   }, []);\n\n//   const handleFileChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setSelectedFile(e.target.files[0]);\n//     }\n//   };\n\n//   const handleUpload = async () => {\n//     if (!selectedFile) {\n//       alert(\"Please select a file first.\");\n//       return;\n//     }\n//     // Create a FormData object and append the file\n//     const formData = new FormData();\n//     formData.append(\"file\", selectedFile);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:8000/predict\", {\n//         method: \"POST\",\n//         body: formData\n//       });\n//       const data = await response.json();\n//       console.log(\"Prediction result:\", data);\n//       setResult(data);\n//       setPage(\"results\");\n//     } catch (error) {\n//       console.error(\"Error uploading file:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {showSplash ? (\n//         <div className={`splash-wrapper ${fadeClass}`}>\n//           <SplashScreen />\n//         </div>\n//       ) : (\n//         <div className=\"main-menu\">\n//           <h1 className=\"main-title\">GENESIGHT</h1>\n//           <h2 className=\"subtitle\">Upload Your Gene Expression Data</h2>\n//           <p className=\"description\">\n//             Get a quick and explainable risk assessment for disease prediction.\n//           </p>\n\n//           {/* Hologram Section */}\n//           <div className=\"hologram-container\">\n//             <video autoPlay loop muted playsInline className=\"hologram-video\">\n//               <source src={dnaVideo} type=\"video/mp4\" />\n//               Your browser does not support the video tag.\n//             </video>\n//           </div>\n\n//           {page === 'upload' ? (\n//             <div className=\"upload-section\">\n//               <label htmlFor=\"file-upload\" className=\"file-label\">\n//                 Select File\n//               </label>\n//               <input\n//                 id=\"file-upload\"\n//                 className=\"file-input\"\n//                 type=\"file\"\n//                 onChange={handleFileChange}\n//               />\n//               <button className=\"upload-button\" onClick={handleUpload}>\n//                 Upload Files Now\n//               </button>\n//             </div>\n//           ) : (\n//             <div className=\"results-section\">\n//               <h2>Analysis Results</h2>\n//               {result ? (\n//                 <>\n//                   <p>Risk Score: {result.riskScore}</p>\n//                   <ul>\n//                     {result.topFeatures.map((feat, idx) => (\n//                       <li key={idx}>\n//                         {feat.gene}: {feat.importance.toFixed(2)}\n//                       </li>\n//                     ))}\n//                   </ul>\n//                 </>\n//               ) : (\n//                 <p>No results available.</p>\n//               )}\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}