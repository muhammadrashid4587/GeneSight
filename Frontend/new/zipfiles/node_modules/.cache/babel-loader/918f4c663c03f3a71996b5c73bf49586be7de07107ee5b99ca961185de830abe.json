{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadrashid/Desktop/Mammu/Mammu/GeneSight/GeneSight/Frontend/new/zipfiles/src/App.js\",\n  _s = $RefreshSig$();\n// // App.js\n// import React, { useState, useEffect } from 'react';\n// import SplashScreen from './SplashScreen';\n// import './styles.css'; // Your existing CSS for the upload/results UI\n\n// function App() {\n//   // State for showing/hiding splash screen\n//   const [showSplash, setShowSplash] = useState(true);\n//   // State for adding fade-out class\n//   const [fadeClass, setFadeClass] = useState('');\n\n//   // State for switching between upload and results pages (after splash)\n//   const [page, setPage] = useState('upload');\n\n//   useEffect(() => {\n//     // Let the splash screen show for 3 seconds\n//     const timer = setTimeout(() => {\n//       // Add fade-out animation\n//       setFadeClass('fade-out');\n//       // Remove splash screen after fade-out completes (1s)\n//       setTimeout(() => {\n//         setShowSplash(false);\n//       }, 1000);\n//     }, 3000);\n\n//     return () => clearTimeout(timer);\n//   }, []);\n\n//   const handleUpload = () => {\n//     setPage('results');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {showSplash ? (\n//         <div className={fadeClass}>\n//           <SplashScreen />\n//         </div>\n//       ) : (\n//         <div className=\"container\">\n//           {page === 'upload' ? (\n//             <>\n//               <h1>GeneSight Upload Page</h1>\n//               <p>Click the button below to upload your files for analysis.</p>\n//               <input type=\"file\" className=\"file-input\" />\n//               <button className=\"upload-button\" onClick={handleUpload}>\n//                 Upload Files Here Now\n//               </button>\n//             </>\n//           ) : (\n//             <>\n//               <h1>Here's What We Found:</h1>\n//               <p>Your results will be displayed here!</p>\n//             </>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport SplashScreen from './SplashScreen';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Whether the splash screen is still visible\n  const [showSplash, setShowSplash] = useState(true);\n  // Class to trigger fade-out\n  const [fadeClass, setFadeClass] = useState('');\n\n  // Which page is shown AFTER splash (upload or results)\n  const [page, setPage] = useState('upload');\n  useEffect(() => {\n    // 3-second timer before we start fading out\n    const timer = setTimeout(() => {\n      setFadeClass('fade-out'); // triggers the fade-out CSS\n      // after 1 second of fade-out, hide splash\n      setTimeout(() => {\n        setShowSplash(false);\n      }, 1000);\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, []);\n  const handleUpload = () => {\n    setPage('results');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: showSplash ?\n    /*#__PURE__*/\n    // Wrap splash in a div that can get the fade-out class\n    _jsxDEV(\"div\", {\n      className: `splash-wrapper ${fadeClass}`,\n      children: /*#__PURE__*/_jsxDEV(SplashScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: page === 'upload' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"GeneSight Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click the button below to upload your files for analysis.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-button\",\n          onClick: handleUpload,\n          children: \"Upload Files Here Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Here's What We Found:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your results will be displayed here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6E/mWXpwCiWW/2aTuHS5FYw8k1I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SplashScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showSplash","setShowSplash","fadeClass","setFadeClass","page","setPage","timer","setTimeout","clearTimeout","handleUpload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/muhammadrashid/Desktop/Mammu/Mammu/GeneSight/GeneSight/Frontend/new/zipfiles/src/App.js"],"sourcesContent":["// // App.js\n// import React, { useState, useEffect } from 'react';\n// import SplashScreen from './SplashScreen';\n// import './styles.css'; // Your existing CSS for the upload/results UI\n\n// function App() {\n//   // State for showing/hiding splash screen\n//   const [showSplash, setShowSplash] = useState(true);\n//   // State for adding fade-out class\n//   const [fadeClass, setFadeClass] = useState('');\n\n//   // State for switching between upload and results pages (after splash)\n//   const [page, setPage] = useState('upload');\n\n//   useEffect(() => {\n//     // Let the splash screen show for 3 seconds\n//     const timer = setTimeout(() => {\n//       // Add fade-out animation\n//       setFadeClass('fade-out');\n//       // Remove splash screen after fade-out completes (1s)\n//       setTimeout(() => {\n//         setShowSplash(false);\n//       }, 1000);\n//     }, 3000);\n\n//     return () => clearTimeout(timer);\n//   }, []);\n\n//   const handleUpload = () => {\n//     setPage('results');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {showSplash ? (\n//         <div className={fadeClass}>\n//           <SplashScreen />\n//         </div>\n//       ) : (\n//         <div className=\"container\">\n//           {page === 'upload' ? (\n//             <>\n//               <h1>GeneSight Upload Page</h1>\n//               <p>Click the button below to upload your files for analysis.</p>\n//               <input type=\"file\" className=\"file-input\" />\n//               <button className=\"upload-button\" onClick={handleUpload}>\n//                 Upload Files Here Now\n//               </button>\n//             </>\n//           ) : (\n//             <>\n//               <h1>Here's What We Found:</h1>\n//               <p>Your results will be displayed here!</p>\n//             </>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport SplashScreen from './SplashScreen';\nimport './styles.css';\n\nfunction App() {\n  // Whether the splash screen is still visible\n  const [showSplash, setShowSplash] = useState(true);\n  // Class to trigger fade-out\n  const [fadeClass, setFadeClass] = useState('');\n\n  // Which page is shown AFTER splash (upload or results)\n  const [page, setPage] = useState('upload');\n\n  useEffect(() => {\n    // 3-second timer before we start fading out\n    const timer = setTimeout(() => {\n      setFadeClass('fade-out'); // triggers the fade-out CSS\n      // after 1 second of fade-out, hide splash\n      setTimeout(() => {\n        setShowSplash(false);\n      }, 1000);\n    }, 3000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handleUpload = () => {\n    setPage('results');\n  };\n\n  return (\n    <div className=\"App\">\n      {showSplash ? (\n        // Wrap splash in a div that can get the fade-out class\n        <div className={`splash-wrapper ${fadeClass}`}>\n          <SplashScreen />\n        </div>\n      ) : (\n        <div className=\"container\">\n          {page === 'upload' ? (\n            <>\n              <h1>GeneSight Upload Page</h1>\n              <p>Click the button below to upload your files for analysis.</p>\n              <input type=\"file\" className=\"file-input\" />\n              <button className=\"upload-button\" onClick={handleUpload}>\n                Upload Files Here Now\n              </button>\n            </>\n          ) : (\n            <>\n              <h1>Here's What We Found:</h1>\n              <p>Your results will be displayed here!</p>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}